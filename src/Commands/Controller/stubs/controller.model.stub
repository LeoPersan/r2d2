<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}
use Illuminate\Http\Request;

class {{ class }} extends Controller
{
    public function __construct() {
        $this->authorizeResource({{ model }}::class, '{{ modelVariable }}');
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        return view('admin.{{ pluralModelVariable }}.index', [
            'data' => {{ model }}::pesquisar($request)->paginate(config('app.list_count'))->appends($request->except('page')),
        ]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        ${{ modelVariable }} = new {{ model }};
        return view('admin.{{ pluralModelVariable }}.form', [
            'data' => ${{ modelVariable }},
        ]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function edit({{ model }} ${{ modelVariable }})
    {
        return view('admin.{{ pluralModelVariable }}.form', [
            'data' => ${{ modelVariable }},
        ]);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \{{ namespacedStoreRequest }}  $request
     * @return \Illuminate\Http\Response
     */
    public function store({{ storeRequest }} $request)
    {
        ${{ modelVariable }} = {{ model }}::findOrNew($request->id);
        ${{ modelVariable }}->fill($request->validated());
        ${{ modelVariable }}->save();

        return [
            'result'=> true,
            'msg' => '{{ model }} '.($request->id ? 'alterado' : 'criado').' com sucesso!',
            'redirect' => route('{{ pluralModelVariable }}.index')
        ];
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->delete();
        return [
            'result' => true,
            'msg' => '{{ model }} excluÃ­do com sucesso!',
            'redirect' => route('{{ pluralModelVariable }}.index'),
        ];
    }
}
